useDynLib(tweeDEseq, .registration=TRUE)
importFrom(Rcpp, evalCpp)
exportPattern("^[[:alpha:]]+")
importFrom(MASS, fitdistr)
importClassesFrom(edgeR, DGEList)
importFrom(edgeR, DGEList, calcNormFactors, estimateCommonDisp,
           estimateTagwiseDisp, equalizeLibSizes)
importFrom(limma, zscoreGamma)
importFrom(parallel, mclapply, detectCores)
importFrom(cqn, cqn)
importFrom(grDevices, grey)
importFrom(graphics, abline, axis, legend, lines, points,
           text)
importFrom(stats, AIC, aggregate, approxfun, contrasts,
           dnbinom, dpois, ecdf, logLik, lowess,
           model.matrix, model.response, optim, p.adjust,
           pchisq, pnorm, ppoints, qchisq, qnorm, qqnorm,
           quantile, runif, symnum, update, var,
           weighted.mean)
importFrom(utils, setTxtProgressBar, txtProgressBar)

export(
  compareCountDist,
  testPoissonTweedie,
  mlePoissonTweedie,
  dPT,
  rPT, 
  testShapePT, 
  getParam, 
  normalizeCounts,
  filterCounts,
  tweeDE,
  gofTest,
  qqchisq,
  MAplot,
  Vplot,
  glmPT,
  tweeDEglm,
  exactTestPT,
  tweeDExact
  )


S3method(print, mlePT)
S3method(logLik, mlePT)
S3method(confint, mlePT)
S3method(print, tweeDE)
S3method(MAplot, tweeDE)
S3method(Vplot, tweeDE)
S3method(print, glmPT)
S3method(summary, glmPT)
S3method(anova, glmPT)
S3method(logLik, glmPT)
S3method(AIC, glmPT)
